1. Add debug info
  a. In application.html.erb, after render 'layouts/footer' add
    <%= debug(params) if Rails.env.development? %>
  b. In custom.css.scss add
    $gray-medium-light: #eaeaea;
    @mixin box_sizing {
      -moz-box-sizing:    border-box;
      -webkit-box-sizing: border-box;
      box-sizing:         border-box;
    }
    .debug_dump {
      clear: both;
      float: left;
      width: 100%;
      margin-top: 45px;
      @include box_sizing;
    }
  c. Reload home page to see debug info at bottom of page
2. In rails console
  User.create(name: "John Doe", email: "iceguyvn@yahoo.com", password: "password", password_confirmation: "password")
3. Show user
  a. In routes.rb add
    resources :users
  b. In users_controller.rb add
    def show
      @user = User.find(params[:id])
    end
  c. Create file views/users/show.html.erb
    <%= @user.name %>, <%= @user.email %>
  d. Go to /users/1 to show user
4. Display a Gravatar
  a. Transform users/show.html.erb to
    <% provide(:title, @user.name) %>
    <h1>
      <%= gravatar_for @user %>
      <%= @user.name %>
    </h1>
  b. In app/helpers/users_helper.rb add
    def gravatar_for(user)
      gravatar_id = Digest::MD5::hexdigest(user.email.downcase)
      gravatar_url = "https://secure.gravatar.com/avatar/#{gravatar_id}"
      image_tag(gravatar_url, alt: user.name, class: "gravatar")
    end
  c. Reload the User Show page to see the gravatar
5. Add a sidebar
  a. Transform show.html.erb to
    <% provide(:title, @user.name) %>
    <div class="row">
      <aside class="col-md-4">
        <section class="user_info">
          <h1>
            <%= gravatar_for @user %>
            <%= @user.name %>
          </h1>
        </section>
      </aside>
    </div>
  b. Reload the Show page to see the gravatar and name moved to the side
6. Style the sidebar
  a. In custom.css.scss add
    aside {
      section.user_info {
        margin-top: 20px;
      }
      section {
        padding: 10px 0;
        margin-top: 20px;
        &:first-child {
          border: 0;
          padding-top: 0;
        }
        span {
          display: block;
          margin-bottom: 3px;
          line-height: 1;
        }
        h1 {
          font-size: 1.4em;
          text-align: left;
          letter-spacing: -1px;
          margin-bottom: 3px;
          margin-top: 0px;
        }
      }
    }
    .gravatar {
      float: left;
      margin-right: 10px;
    }
    .gravatar_edit {
      margin-top: 15px;
    }
  b. Reload the Show page
7. Add User Sign up
  a. Go to /signup
  b. In rails console, remove the current user
  c. In users_controller.rb, in def new add
    @user = User.new
  d. Transform users/new.html.erb to
    <% provide(:title, 'Sign up') %>
    <h1>Sign up</h1>
    <div class="row">
      <div class="col-md-6 col-md-offset-3">
        <%= form_for(@user) do |f| %>
          <%= f.label :name %>
          <%= f.text_field :name %>
          <%= f.label :email %>
          <%= f.email_field :email %>
          <%= f.label :password %>
          <%= f.password_field :password %>
          <%= f.label :password_confirmation, "Confirmation" %>
          <%= f.password_field :password_confirmation %>
          <%= f.submit "Create my account", class: "btn btn-primary" %>
        <% end %>
      </div>
    </div>
  e. Reload /signup
8. Style the Sign Up page
  a. In custom.css.scss add
    input, textarea, select, .uneditable-input {
      border: 1px solid #bbb;
      width: 100%;
      margin-bottom: 15px;
      @include box_sizing;
    }
    input {
      height: auto !important;
    }
  b. Reload /signup
9. Setup error messages
  a. Transform users/new.html.erb to
    <% provide(:title, 'Sign up') %>
    <h1>Sign up</h1>
    <div class="row">
      <div class="col-md-6 col-md-offset-3">
        <%= form_for(@user) do |f| %>
          <%= render 'shared/error_messages' %>
          <%= f.label :name %>
          <%= f.text_field :name, class: 'form-control' %>
          <%= f.label :email %>
          <%= f.email_field :email, class: 'form-control' %>
          <%= f.label :password %>
          <%= f.password_field :password, class: 'form-control' %>
          <%= f.label :password_confirmation, "Confirmation" %>
          <%= f.password_field :password_confirmation, class: 'form-control' %>
          <%= f.submit "Create my account", class: "btn btn-primary" %>
        <% end %>
      </div>
    </div>
  b. Create file views/shared/_error_messages.html.erb
    <% if @user.errors.any? %>
      <div id="error_explanation">
        <div class="alert alert-danger">
          The form contains <%= pluralize(@user.errors.count, "error") %>.
        </div>
        <ul>
        <% @user.errors.full_messages.each do |msg| %>
          <li><%= msg %></li>
        <% end %>
        </ul>
      </div>
    <% end %>
  c. In users_controller.rb add
    def create
      @user = User.new(user_params)
      if @user.save
        # Handle a successful save.
      else
        render 'new'
      end
    end
    private
    def user_params
      params.require(:user).permit(:name, :email, :password, :password_confirmation)
    end
  d. Sign up with errors to see the error messages
10. Style the error messages
  a. In custom.css.scss
    #error_explanation {
      color: red;
      ul {
        color: red;
        margin: 0 0 30px 0;
      }
    }
    .field_with_errors {
      @extend .has-error;
      .form-control {
        color: $state-danger-text;
      }
    }
  b. Reload to see the styled error messages
11. Successful sign-up
  a. In users_controller.rb, def create, convert if statement to
    if @user.save
      flash[:success] = "Welcome to the Sample App!"
      redirect_to @user
  b. In application.html.erb, before <% yield %>
    <% flash.each do |message_type, message| %>
      <div class="alert alert-<%= message_type %>"><%= message %></div>
    <% end %>
  c. Sign in successfully to see the flash
